user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    # Set the default MIME type to avoid browser confusion
    default_type application/octet-stream;

    # Define log formats for main access log and upstream logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    log_format upstream_logging '[$time_local] $remote_addr - $remote_user - $server_name to: $upstream_addr: $request upstream_response_time $upstream_response_time msec $msec request_time $request_time';

    # Specify access logs for main requests and upstream logging
    access_log /var/log/nginx/access.log main;
    access_log /var/log/nginx/api_logging.log upstream_logging;

    # Enable sendfile for better performance
    sendfile on;
    # Disable server tokens for security reasons
    server_tokens off;

    # Set keepalive timeout for HTTP connections
    keepalive_timeout 65;

    # HTTP server block
    server {
        listen 80;
        root /usr/share/nginx/html;
        index index.html;

        # Set security headers to protect against common web vulnerabilities
        add_header X-Frame-Options "DENY";
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
        add_header Content-Security-Policy "default-src 'self' https://*.thefirepanel.com; worker-src 'self' blob:; style-src 'self' 'unsafe-inline' 'nonce-$request_id' https://fonts.googleapis.com; script-src 'unsafe-inline' 'self' 'nonce-$request_id'; font-src 'self' https://fonts.gstatic.com; img-src 'self' https://i.ytimg.com data:; base-uri 'self'; object-src 'none'; connect-src *; frame-src https://www.youtube.com;";

        location /team/ {
            return 301 /about;
        }

        location /wiki/ndevices/simplexmnc/ {
            return 301 /tools;
        }

        # Define location block for handling requests
        location / {
            # Include MIME types for proper content handling
            include /etc/nginx/mime.types;
            # Try serving the requested URI, fall back to index.html if not found
            try_files $uri /index.html;
            # Enable nonce on app to protect with CSP
            sub_filter_once off;
            sub_filter random_nonce_value $request_id;
        }
    }
}
